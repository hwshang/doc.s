input {
  file {
    type => "nginx_access"
    path => ["/data/logs/nginx/nginx-*.log"]
    exclude => ["*.gz", "access.log"]
  }
}

filter {
  if [type] == "nginx_access" {
    grok {
      match => [ "message", "%{IPORHOST:clientip} %{USER:ident} %{USER:auth} \[%{HTTPDATE:timestamp}\] \"%{WORD:method} %{URIPATH:request_file}(?:%{URIPARAM:request_param})? HTTP/%{NUMBER:http_version}\" %{NUMBER:response} (?:%{NUMBER:bytes}|-) %{NUMBER:request_time:float} %{QS:referrer} %{QS:agent} (%{IP:x_forwarder_for}|-) (?<request_body>request_body\:.*) \"%{USER:uid}\"" ]
    }
    geoip {
      source => "clientip"
      target => "geoip"
      database => "/opt/logstash/vendor/geoip/GeoLiteCity.dat"
    }
    mutate {
      gsub => [ "request_body","request_body:","" ]
      gsub => [ "referrer","\"","" ]
      gsub => [ "agent","\"","" ]
    }
  }
}

output {
  elasticsearch {
    cluster => "elasticsearch"
    codec => "json"
    protocol => "http"
    embedded => "true"
    index => "nginx-access-%{+YYYY.MM.dd}"
  }   
}
